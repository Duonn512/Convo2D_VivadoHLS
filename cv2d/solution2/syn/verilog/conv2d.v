// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=28,HLS_SYN_TPT=25,HLS_SYN_MEM=6,HLS_SYN_DSP=111,HLS_SYN_FF=3183,HLS_SYN_LUT=3591,HLS_VERSION=2018_3}" *)

module conv2d (
        ap_clk,
        ap_rst_n,
        s_axi_cv_io_AWVALID,
        s_axi_cv_io_AWREADY,
        s_axi_cv_io_AWADDR,
        s_axi_cv_io_WVALID,
        s_axi_cv_io_WREADY,
        s_axi_cv_io_WDATA,
        s_axi_cv_io_WSTRB,
        s_axi_cv_io_ARVALID,
        s_axi_cv_io_ARREADY,
        s_axi_cv_io_ARADDR,
        s_axi_cv_io_RVALID,
        s_axi_cv_io_RREADY,
        s_axi_cv_io_RDATA,
        s_axi_cv_io_RRESP,
        s_axi_cv_io_BVALID,
        s_axi_cv_io_BREADY,
        s_axi_cv_io_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 25'd1;
parameter    ap_ST_fsm_pp0_stage1 = 25'd2;
parameter    ap_ST_fsm_pp0_stage2 = 25'd4;
parameter    ap_ST_fsm_pp0_stage3 = 25'd8;
parameter    ap_ST_fsm_pp0_stage4 = 25'd16;
parameter    ap_ST_fsm_pp0_stage5 = 25'd32;
parameter    ap_ST_fsm_pp0_stage6 = 25'd64;
parameter    ap_ST_fsm_pp0_stage7 = 25'd128;
parameter    ap_ST_fsm_pp0_stage8 = 25'd256;
parameter    ap_ST_fsm_pp0_stage9 = 25'd512;
parameter    ap_ST_fsm_pp0_stage10 = 25'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 25'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 25'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 25'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 25'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 25'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 25'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 25'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 25'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 25'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 25'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 25'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 25'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 25'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 25'd16777216;
parameter    C_S_AXI_CV_IO_DATA_WIDTH = 32;
parameter    C_S_AXI_CV_IO_ADDR_WIDTH = 9;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CV_IO_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_cv_io_AWVALID;
output   s_axi_cv_io_AWREADY;
input  [C_S_AXI_CV_IO_ADDR_WIDTH - 1:0] s_axi_cv_io_AWADDR;
input   s_axi_cv_io_WVALID;
output   s_axi_cv_io_WREADY;
input  [C_S_AXI_CV_IO_DATA_WIDTH - 1:0] s_axi_cv_io_WDATA;
input  [C_S_AXI_CV_IO_WSTRB_WIDTH - 1:0] s_axi_cv_io_WSTRB;
input   s_axi_cv_io_ARVALID;
output   s_axi_cv_io_ARREADY;
input  [C_S_AXI_CV_IO_ADDR_WIDTH - 1:0] s_axi_cv_io_ARADDR;
output   s_axi_cv_io_RVALID;
input   s_axi_cv_io_RREADY;
output  [C_S_AXI_CV_IO_DATA_WIDTH - 1:0] s_axi_cv_io_RDATA;
output  [1:0] s_axi_cv_io_RRESP;
output   s_axi_cv_io_BVALID;
input   s_axi_cv_io_BREADY;
output  [1:0] s_axi_cv_io_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_ready;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
reg   [4:0] input_r_address0;
reg    input_r_ce0;
wire   [31:0] input_r_q0;
reg   [3:0] kernel_address0;
reg    kernel_ce0;
wire   [31:0] kernel_q0;
reg   [3:0] output_r_address0;
reg    output_r_ce0;
reg    output_r_we0;
reg   [31:0] output_r_d0;
reg  signed [31:0] reg_490;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state27_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state28_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state29_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state26_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg  signed [31:0] reg_494;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
reg  signed [31:0] reg_498;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg  signed [31:0] reg_502;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
wire   [31:0] grp_fu_506_p2;
reg   [31:0] reg_601;
wire   [31:0] grp_fu_511_p2;
reg   [31:0] reg_605;
reg   [31:0] reg_609;
wire   [31:0] grp_fu_516_p2;
reg   [31:0] reg_613;
wire   [31:0] grp_fu_521_p2;
reg   [31:0] reg_617;
wire   [31:0] grp_fu_526_p2;
reg   [31:0] reg_621;
wire   [31:0] grp_fu_531_p2;
reg   [31:0] reg_625;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire   [31:0] grp_fu_546_p2;
reg   [31:0] reg_629;
wire   [31:0] grp_fu_556_p2;
reg   [31:0] reg_633;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire   [31:0] grp_fu_561_p2;
reg   [31:0] reg_637;
wire   [31:0] grp_fu_566_p2;
reg   [31:0] reg_641;
wire   [31:0] grp_fu_571_p2;
reg   [31:0] reg_645;
wire   [31:0] grp_fu_576_p2;
reg   [31:0] reg_649;
wire   [31:0] grp_fu_581_p2;
reg   [31:0] reg_653;
wire   [31:0] grp_fu_586_p2;
reg   [31:0] reg_657;
wire   [31:0] grp_fu_591_p2;
reg   [31:0] reg_661;
wire   [31:0] grp_fu_596_p2;
reg   [31:0] reg_665;
wire   [31:0] grp_fu_669_p2;
reg   [31:0] reg_693;
reg  signed [31:0] kernel_load_reg_1123;
reg  signed [31:0] kernel_load_1_reg_1139;
reg  signed [31:0] kernel_load_2_reg_1156;
reg  signed [31:0] kernel_load_3_reg_1174;
reg  signed [31:0] kernel_load_4_reg_1191;
reg   [31:0] tmp_15_0_1_0_2_reg_1200;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] tmp8_reg_1205;
reg  signed [31:0] kernel_load_5_reg_1220;
reg   [31:0] tmp_15_0_2_0_2_reg_1230;
reg   [31:0] tmp15_reg_1235;
reg  signed [31:0] kernel_load_6_reg_1250;
reg  signed [31:0] kernel_load_7_reg_1267;
wire   [31:0] grp_fu_681_p2;
reg   [31:0] tmp2_reg_1276;
reg  signed [31:0] kernel_load_8_reg_1286;
reg   [31:0] tmp_15_0_1_1_1_reg_1296;
wire   [31:0] tmp9_fu_697_p2;
reg   [31:0] tmp9_reg_1301;
reg   [31:0] tmp22_reg_1306;
wire   [31:0] grp_fu_536_p2;
reg   [31:0] tmp_15_0_1_1_2_reg_1316;
wire   [31:0] grp_fu_541_p2;
reg   [31:0] tmp_15_0_2_1_1_reg_1321;
wire   [31:0] tmp16_fu_702_p2;
reg   [31:0] tmp16_reg_1326;
wire   [31:0] grp_fu_551_p2;
reg   [31:0] tmp_15_0_2_1_2_reg_1336;
reg   [31:0] tmp29_reg_1341;
wire   [31:0] grp_fu_687_p2;
reg   [31:0] tmp36_reg_1351;
reg   [31:0] tmp_15_0_1_2_reg_1361;
reg   [31:0] tmp_15_1_0_1_1_reg_1366;
reg   [31:0] tmp23_reg_1371;
wire   [31:0] tmp_15_0_0_2_2_fu_707_p2;
reg   [31:0] tmp_15_0_0_2_2_reg_1381;
reg   [31:0] tmp_15_1_0_1_2_reg_1386;
wire   [31:0] tmp30_fu_712_p2;
reg   [31:0] tmp30_reg_1391;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
reg  signed [31:0] input_load_14_reg_1401;
wire   [31:0] tmp3_fu_735_p2;
reg   [31:0] tmp3_reg_1408;
wire   [31:0] tmp_15_0_1_2_2_fu_741_p2;
reg   [31:0] tmp_15_0_1_2_2_reg_1413;
wire   [31:0] tmp_15_0_2_2_1_fu_746_p2;
reg   [31:0] tmp_15_0_2_2_1_reg_1418;
reg   [31:0] tmp_15_1_1_1_1_reg_1423;
reg   [31:0] tmp_15_1_1_1_2_reg_1428;
wire   [31:0] tmp10_fu_776_p2;
reg   [31:0] tmp10_reg_1438;
wire   [31:0] tmp_15_0_2_2_2_fu_782_p2;
reg   [31:0] tmp_15_0_2_2_2_reg_1443;
wire   [31:0] tmp_15_1_2_1_fu_786_p2;
reg   [31:0] tmp_15_1_2_1_reg_1448;
wire   [31:0] tmp_15_1_2_1_1_fu_791_p2;
reg   [31:0] tmp_15_1_2_1_1_reg_1453;
wire   [31:0] tmp_15_1_2_1_2_fu_796_p2;
reg   [31:0] tmp_15_1_2_1_2_reg_1458;
wire   [31:0] tmp17_fu_824_p2;
reg   [31:0] tmp17_reg_1468;
wire   [31:0] tmp37_fu_830_p2;
reg   [31:0] tmp37_reg_1473;
wire   [31:0] tmp_15_1_0_2_1_fu_845_p2;
reg   [31:0] tmp_15_1_0_2_1_reg_1483;
reg   [31:0] tmp_15_1_1_2_reg_1488;
wire   [31:0] tmp_15_2_0_1_1_fu_850_p2;
reg   [31:0] tmp_15_2_0_1_1_reg_1493;
wire   [31:0] tmp44_fu_855_p2;
reg   [31:0] tmp44_reg_1498;
reg  signed [31:0] input_load_18_reg_1508;
reg  signed [31:0] input_load_19_reg_1521;
wire   [31:0] tmp24_fu_876_p2;
reg   [31:0] tmp24_reg_1527;
wire   [31:0] tmp_15_1_1_2_2_fu_882_p2;
reg   [31:0] tmp_15_1_1_2_2_reg_1532;
wire   [31:0] tmp_15_1_2_2_1_fu_886_p2;
reg   [31:0] tmp_15_1_2_2_1_reg_1537;
wire   [31:0] tmp31_fu_914_p2;
reg   [31:0] tmp31_reg_1547;
wire   [31:0] tmp_15_1_2_2_2_fu_920_p2;
reg   [31:0] tmp_15_1_2_2_2_reg_1552;
wire   [31:0] tmp_15_2_1_1_2_fu_924_p2;
reg   [31:0] tmp_15_2_1_1_2_reg_1557;
reg   [31:0] tmp50_reg_1562;
wire   [31:0] tmp38_fu_952_p2;
reg   [31:0] tmp38_reg_1572;
wire   [31:0] tmp51_fu_958_p2;
reg   [31:0] tmp51_reg_1577;
wire   [31:0] tmp_15_2_2_fu_964_p2;
reg   [31:0] tmp_15_2_2_reg_1582;
wire   [31:0] tmp_15_2_2_0_1_fu_969_p2;
reg   [31:0] tmp_15_2_2_0_1_reg_1587;
wire   [31:0] tmp_15_2_2_0_2_fu_974_p2;
reg   [31:0] tmp_15_2_2_0_2_reg_1592;
wire   [31:0] tmp_15_2_2_1_1_fu_988_p2;
reg   [31:0] tmp_15_2_2_1_1_reg_1602;
wire   [31:0] tmp57_fu_992_p2;
reg   [31:0] tmp57_reg_1607;
wire   [31:0] tmp_15_2_2_1_2_fu_996_p2;
reg   [31:0] tmp_15_2_2_1_2_reg_1617;
wire   [31:0] tmp58_fu_1000_p2;
reg   [31:0] tmp58_reg_1622;
wire   [31:0] tmp45_fu_1022_p2;
reg   [31:0] tmp45_reg_1627;
reg   [31:0] tmp_15_2_2_2_1_reg_1632;
wire   [31:0] tmp52_fu_1056_p2;
reg   [31:0] tmp52_reg_1637;
wire   [31:0] tmp59_fu_1087_p2;
reg   [31:0] tmp59_reg_1642;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire   [31:0] sum_2_0_0_2_2_fu_756_p2;
wire   [31:0] sum_2_0_1_2_2_fu_804_p2;
wire   [31:0] sum_2_0_2_2_2_fu_839_p2;
wire   [31:0] sum_2_1_0_2_2_fu_894_p2;
wire   [31:0] sum_2_1_1_2_2_fu_932_p2;
wire   [31:0] sum_2_1_2_2_2_fu_982_p2;
wire   [31:0] sum_2_2_0_2_2_fu_1033_p2;
wire   [31:0] sum_2_2_1_2_2_fu_1066_p2;
wire   [31:0] sum_2_2_2_2_2_fu_1097_p2;
wire   [31:0] tmp6_fu_724_p2;
wire   [31:0] tmp5_fu_729_p2;
wire   [31:0] tmp4_fu_718_p2;
wire   [31:0] tmp_fu_751_p2;
wire   [31:0] tmp13_fu_766_p2;
wire   [31:0] tmp12_fu_771_p2;
wire   [31:0] tmp11_fu_762_p2;
wire   [31:0] tmp7_fu_800_p2;
wire   [31:0] tmp20_fu_814_p2;
wire   [31:0] tmp19_fu_818_p2;
wire   [31:0] tmp18_fu_810_p2;
wire   [31:0] tmp14_fu_835_p2;
wire   [31:0] tmp27_fu_865_p2;
wire   [31:0] tmp26_fu_870_p2;
wire   [31:0] tmp25_fu_861_p2;
wire   [31:0] tmp21_fu_890_p2;
wire   [31:0] tmp34_fu_904_p2;
wire   [31:0] tmp33_fu_909_p2;
wire   [31:0] tmp32_fu_900_p2;
wire   [31:0] tmp28_fu_928_p2;
wire   [31:0] tmp41_fu_942_p2;
wire   [31:0] tmp40_fu_946_p2;
wire   [31:0] tmp39_fu_938_p2;
wire   [31:0] tmp35_fu_978_p2;
wire   [31:0] tmp48_fu_1010_p2;
wire   [31:0] tmp47_fu_1016_p2;
wire   [31:0] tmp46_fu_1005_p2;
wire   [31:0] tmp42_fu_1028_p2;
wire   [31:0] tmp55_fu_1044_p2;
wire   [31:0] tmp54_fu_1050_p2;
wire   [31:0] tmp53_fu_1039_p2;
wire   [31:0] tmp49_fu_1062_p2;
wire   [31:0] tmp62_fu_1076_p2;
wire   [31:0] tmp61_fu_1081_p2;
wire   [31:0] tmp60_fu_1072_p2;
wire   [31:0] tmp56_fu_1093_p2;
reg   [24:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

conv2d_cv_io_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CV_IO_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CV_IO_DATA_WIDTH ))
conv2d_cv_io_s_axi_U(
    .AWVALID(s_axi_cv_io_AWVALID),
    .AWREADY(s_axi_cv_io_AWREADY),
    .AWADDR(s_axi_cv_io_AWADDR),
    .WVALID(s_axi_cv_io_WVALID),
    .WREADY(s_axi_cv_io_WREADY),
    .WDATA(s_axi_cv_io_WDATA),
    .WSTRB(s_axi_cv_io_WSTRB),
    .ARVALID(s_axi_cv_io_ARVALID),
    .ARREADY(s_axi_cv_io_ARREADY),
    .ARADDR(s_axi_cv_io_ARADDR),
    .RVALID(s_axi_cv_io_RVALID),
    .RREADY(s_axi_cv_io_RREADY),
    .RDATA(s_axi_cv_io_RDATA),
    .RRESP(s_axi_cv_io_RRESP),
    .BVALID(s_axi_cv_io_BVALID),
    .BREADY(s_axi_cv_io_BREADY),
    .BRESP(s_axi_cv_io_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .input_r_address0(input_r_address0),
    .input_r_ce0(input_r_ce0),
    .input_r_q0(input_r_q0),
    .kernel_address0(kernel_address0),
    .kernel_ce0(kernel_ce0),
    .kernel_q0(kernel_q0),
    .output_r_address0(output_r_address0),
    .output_r_ce0(output_r_ce0),
    .output_r_we0(output_r_we0),
    .output_r_d0(output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage24_subdone) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_14_reg_1401 <= input_r_q0;
        tmp_15_1_1_1_1_reg_1423 <= grp_fu_541_p2;
        tmp_15_1_1_1_2_reg_1428 <= grp_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        input_load_18_reg_1508 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        input_load_19_reg_1521 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        kernel_load_1_reg_1139 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        kernel_load_2_reg_1156 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        kernel_load_3_reg_1174 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        kernel_load_4_reg_1191 <= kernel_q0;
        tmp8_reg_1205 <= grp_fu_675_p2;
        tmp_15_0_1_0_2_reg_1200 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        kernel_load_5_reg_1220 <= kernel_q0;
        tmp15_reg_1235 <= grp_fu_669_p2;
        tmp_15_0_2_0_2_reg_1230 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        kernel_load_6_reg_1250 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        kernel_load_7_reg_1267 <= kernel_q0;
        tmp2_reg_1276 <= grp_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        kernel_load_8_reg_1286 <= kernel_q0;
        tmp22_reg_1306 <= grp_fu_669_p2;
        tmp_15_0_1_1_1_reg_1296 <= grp_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        kernel_load_reg_1123 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_490 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_494 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_498 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)))) begin
        reg_502 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_601 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_605 <= grp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_609 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_613 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_617 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_621 <= grp_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_625 <= grp_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_629 <= grp_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        reg_633 <= grp_fu_556_p2;
        reg_637 <= grp_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_641 <= grp_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_645 <= grp_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)))) begin
        reg_649 <= grp_fu_576_p2;
        reg_653 <= grp_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)))) begin
        reg_657 <= grp_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        reg_661 <= grp_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_665 <= grp_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_693 <= grp_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp10_reg_1438 <= tmp10_fu_776_p2;
        tmp_15_0_2_2_2_reg_1443 <= tmp_15_0_2_2_2_fu_782_p2;
        tmp_15_1_2_1_1_reg_1453 <= tmp_15_1_2_1_1_fu_791_p2;
        tmp_15_1_2_1_2_reg_1458 <= tmp_15_1_2_1_2_fu_796_p2;
        tmp_15_1_2_1_reg_1448 <= tmp_15_1_2_1_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp16_reg_1326 <= tmp16_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        tmp17_reg_1468 <= tmp17_fu_824_p2;
        tmp37_reg_1473 <= tmp37_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp23_reg_1371 <= grp_fu_681_p2;
        tmp_15_0_1_2_reg_1361 <= grp_fu_566_p2;
        tmp_15_1_0_1_1_reg_1366 <= grp_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        tmp24_reg_1527 <= tmp24_fu_876_p2;
        tmp_15_1_1_2_2_reg_1532 <= tmp_15_1_1_2_2_fu_882_p2;
        tmp_15_1_2_2_1_reg_1537 <= tmp_15_1_2_2_1_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp29_reg_1341 <= grp_fu_675_p2;
        tmp_15_0_2_1_2_reg_1336 <= grp_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp30_reg_1391 <= tmp30_fu_712_p2;
        tmp_15_0_0_2_2_reg_1381 <= tmp_15_0_0_2_2_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        tmp31_reg_1547 <= tmp31_fu_914_p2;
        tmp_15_1_2_2_2_reg_1552 <= tmp_15_1_2_2_2_fu_920_p2;
        tmp_15_2_1_1_2_reg_1557 <= tmp_15_2_1_1_2_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp36_reg_1351 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp38_reg_1572 <= tmp38_fu_952_p2;
        tmp51_reg_1577 <= tmp51_fu_958_p2;
        tmp_15_2_2_0_1_reg_1587 <= tmp_15_2_2_0_1_fu_969_p2;
        tmp_15_2_2_0_2_reg_1592 <= tmp_15_2_2_0_2_fu_974_p2;
        tmp_15_2_2_reg_1582 <= tmp_15_2_2_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp3_reg_1408 <= tmp3_fu_735_p2;
        tmp_15_0_1_2_2_reg_1413 <= tmp_15_0_1_2_2_fu_741_p2;
        tmp_15_0_2_2_1_reg_1418 <= tmp_15_0_2_2_1_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp44_reg_1498 <= tmp44_fu_855_p2;
        tmp_15_1_0_2_1_reg_1483 <= tmp_15_1_0_2_1_fu_845_p2;
        tmp_15_2_0_1_1_reg_1493 <= tmp_15_2_0_1_1_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp45_reg_1627 <= tmp45_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        tmp50_reg_1562 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp52_reg_1637 <= tmp52_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp57_reg_1607 <= tmp57_fu_992_p2;
        tmp_15_2_2_1_1_reg_1602 <= tmp_15_2_2_1_1_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        tmp58_reg_1622 <= tmp58_fu_1000_p2;
        tmp_15_2_2_1_2_reg_1617 <= tmp_15_2_2_1_2_fu_996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp59_reg_1642 <= tmp59_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp9_reg_1301 <= tmp9_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_15_0_1_1_2_reg_1316 <= grp_fu_536_p2;
        tmp_15_0_2_1_1_reg_1321 <= grp_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_15_1_0_1_2_reg_1386 <= grp_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp_15_1_1_2_reg_1488 <= grp_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_15_2_2_2_1_reg_1632 <= grp_fu_571_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            input_r_address0 = 64'd24;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            input_r_address0 = 64'd23;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            input_r_address0 = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            input_r_address0 = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            input_r_address0 = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            input_r_address0 = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            input_r_address0 = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            input_r_address0 = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            input_r_address0 = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            input_r_address0 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            input_r_address0 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            input_r_address0 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            input_r_address0 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            input_r_address0 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            input_r_address0 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            input_r_address0 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_r_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address0 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address0 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = 64'd0;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            kernel_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            kernel_address0 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            kernel_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            kernel_address0 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            kernel_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            kernel_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            kernel_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            kernel_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            kernel_address0 = 64'd0;
        end else begin
            kernel_address0 = 'bx;
        end
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_r_address0 = 64'd8;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_r_address0 = 64'd7;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_r_address0 = 64'd6;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        output_r_address0 = 64'd5;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        output_r_address0 = 64'd4;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        output_r_address0 = 64'd3;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        output_r_address0 = 64'd2;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        output_r_address0 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        output_r_address0 = 64'd0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_r_d0 = sum_2_2_2_2_2_fu_1097_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_r_d0 = sum_2_2_1_2_2_fu_1066_p2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_r_d0 = sum_2_2_0_2_2_fu_1033_p2;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        output_r_d0 = sum_2_1_2_2_2_fu_982_p2;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        output_r_d0 = sum_2_1_1_2_2_fu_932_p2;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        output_r_d0 = sum_2_1_0_2_2_fu_894_p2;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        output_r_d0 = sum_2_0_2_2_2_fu_839_p2;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        output_r_d0 = sum_2_0_1_2_2_fu_804_p2;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        output_r_d0 = sum_2_0_0_2_2_fu_756_p2;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_506_p2 = ($signed(reg_490) * $signed(kernel_load_reg_1123));

assign grp_fu_511_p2 = ($signed(reg_490) * $signed(kernel_load_1_reg_1139));

assign grp_fu_516_p2 = ($signed(reg_490) * $signed(kernel_load_2_reg_1156));

assign grp_fu_521_p2 = ($signed(reg_490) * $signed(kernel_load_3_reg_1174));

assign grp_fu_526_p2 = ($signed(reg_490) * $signed(kernel_load_4_reg_1191));

assign grp_fu_531_p2 = ($signed(reg_490) * $signed(kernel_load_5_reg_1220));

assign grp_fu_536_p2 = ($signed(reg_494) * $signed(kernel_load_5_reg_1220));

assign grp_fu_541_p2 = ($signed(reg_494) * $signed(kernel_load_4_reg_1191));

assign grp_fu_546_p2 = ($signed(reg_494) * $signed(kernel_load_2_reg_1156));

assign grp_fu_551_p2 = ($signed(reg_498) * $signed(kernel_load_5_reg_1220));

assign grp_fu_556_p2 = ($signed(reg_494) * $signed(kernel_load_1_reg_1139));

assign grp_fu_561_p2 = ($signed(reg_498) * $signed(kernel_load_2_reg_1156));

assign grp_fu_566_p2 = ($signed(reg_490) * $signed(kernel_load_6_reg_1250));

assign grp_fu_571_p2 = ($signed(reg_490) * $signed(kernel_load_7_reg_1267));

assign grp_fu_576_p2 = ($signed(reg_494) * $signed(kernel_load_7_reg_1267));

assign grp_fu_581_p2 = ($signed(reg_494) * $signed(kernel_load_6_reg_1250));

assign grp_fu_586_p2 = ($signed(reg_502) * $signed(kernel_load_6_reg_1250));

assign grp_fu_591_p2 = ($signed(reg_502) * $signed(kernel_load_3_reg_1174));

assign grp_fu_596_p2 = ($signed(reg_490) * $signed(kernel_load_8_reg_1286));

assign grp_fu_669_p2 = (reg_601 + reg_605);

assign grp_fu_675_p2 = (reg_609 + reg_605);

assign grp_fu_681_p2 = (reg_613 + reg_617);

assign grp_fu_687_p2 = (reg_601 + reg_633);

assign sum_2_0_0_2_2_fu_756_p2 = (tmp3_reg_1408 + tmp_fu_751_p2);

assign sum_2_0_1_2_2_fu_804_p2 = (tmp10_reg_1438 + tmp7_fu_800_p2);

assign sum_2_0_2_2_2_fu_839_p2 = (tmp17_reg_1468 + tmp14_fu_835_p2);

assign sum_2_1_0_2_2_fu_894_p2 = (tmp24_reg_1527 + tmp21_fu_890_p2);

assign sum_2_1_1_2_2_fu_932_p2 = (tmp31_reg_1547 + tmp28_fu_928_p2);

assign sum_2_1_2_2_2_fu_982_p2 = (tmp38_reg_1572 + tmp35_fu_978_p2);

assign sum_2_2_0_2_2_fu_1033_p2 = (tmp45_reg_1627 + tmp42_fu_1028_p2);

assign sum_2_2_1_2_2_fu_1066_p2 = (tmp52_reg_1637 + tmp49_fu_1062_p2);

assign sum_2_2_2_2_2_fu_1097_p2 = (tmp59_reg_1642 + tmp56_fu_1093_p2);

assign tmp10_fu_776_p2 = (tmp12_fu_771_p2 + tmp11_fu_762_p2);

assign tmp11_fu_762_p2 = (tmp_15_0_1_1_1_reg_1296 + tmp_15_0_1_1_2_reg_1316);

assign tmp12_fu_771_p2 = (tmp13_fu_766_p2 + tmp_15_0_1_2_reg_1361);

assign tmp13_fu_766_p2 = (reg_649 + tmp_15_0_1_2_2_reg_1413);

assign tmp14_fu_835_p2 = (tmp16_reg_1326 + tmp15_reg_1235);

assign tmp16_fu_702_p2 = (tmp_15_0_2_0_2_reg_1230 + reg_617);

assign tmp17_fu_824_p2 = (tmp19_fu_818_p2 + tmp18_fu_810_p2);

assign tmp18_fu_810_p2 = (tmp_15_0_2_1_1_reg_1321 + tmp_15_0_2_1_2_reg_1336);

assign tmp19_fu_818_p2 = (tmp20_fu_814_p2 + reg_653);

assign tmp20_fu_814_p2 = (tmp_15_0_2_2_1_reg_1418 + tmp_15_0_2_2_2_reg_1443);

assign tmp21_fu_890_p2 = (tmp23_reg_1371 + tmp22_reg_1306);

assign tmp24_fu_876_p2 = (tmp26_fu_870_p2 + tmp25_fu_861_p2);

assign tmp25_fu_861_p2 = (tmp_15_1_0_1_1_reg_1366 + tmp_15_1_0_1_2_reg_1386);

assign tmp26_fu_870_p2 = (tmp27_fu_865_p2 + reg_657);

assign tmp27_fu_865_p2 = (tmp_15_1_0_2_1_reg_1483 + reg_665);

assign tmp28_fu_928_p2 = (tmp30_reg_1391 + tmp29_reg_1341);

assign tmp30_fu_712_p2 = (reg_629 + reg_617);

assign tmp31_fu_914_p2 = (tmp33_fu_909_p2 + tmp32_fu_900_p2);

assign tmp32_fu_900_p2 = (tmp_15_1_1_1_1_reg_1423 + tmp_15_1_1_1_2_reg_1428);

assign tmp33_fu_909_p2 = (tmp34_fu_904_p2 + tmp_15_1_1_2_reg_1488);

assign tmp34_fu_904_p2 = (reg_645 + tmp_15_1_1_2_2_reg_1532);

assign tmp35_fu_978_p2 = (tmp37_reg_1473 + tmp36_reg_1351);

assign tmp37_fu_830_p2 = (reg_637 + tmp_15_1_2_1_reg_1448);

assign tmp38_fu_952_p2 = (tmp40_fu_946_p2 + tmp39_fu_938_p2);

assign tmp39_fu_938_p2 = (tmp_15_1_2_1_1_reg_1453 + tmp_15_1_2_1_2_reg_1458);

assign tmp3_fu_735_p2 = (tmp5_fu_729_p2 + tmp4_fu_718_p2);

assign tmp40_fu_946_p2 = (tmp41_fu_942_p2 + reg_641);

assign tmp41_fu_942_p2 = (tmp_15_1_2_2_1_reg_1537 + tmp_15_1_2_2_2_reg_1552);

assign tmp42_fu_1028_p2 = (tmp44_reg_1498 + reg_693);

assign tmp44_fu_855_p2 = (reg_629 + reg_661);

assign tmp45_fu_1022_p2 = (tmp47_fu_1016_p2 + tmp46_fu_1005_p2);

assign tmp46_fu_1005_p2 = (tmp_15_2_0_1_1_reg_1493 + reg_625);

assign tmp47_fu_1016_p2 = (tmp48_fu_1010_p2 + reg_657);

assign tmp48_fu_1010_p2 = (reg_649 + reg_665);

assign tmp49_fu_1062_p2 = (tmp51_reg_1577 + tmp50_reg_1562);

assign tmp4_fu_718_p2 = (reg_621 + reg_625);

assign tmp51_fu_958_p2 = (reg_637 + reg_661);

assign tmp52_fu_1056_p2 = (tmp54_fu_1050_p2 + tmp53_fu_1039_p2);

assign tmp53_fu_1039_p2 = (reg_621 + tmp_15_2_1_1_2_reg_1557);

assign tmp54_fu_1050_p2 = (tmp55_fu_1044_p2 + reg_653);

assign tmp55_fu_1044_p2 = (reg_645 + reg_665);

assign tmp56_fu_1093_p2 = (tmp58_reg_1622 + tmp57_reg_1607);

assign tmp57_fu_992_p2 = (tmp_15_2_2_reg_1582 + tmp_15_2_2_0_1_reg_1587);

assign tmp58_fu_1000_p2 = (tmp_15_2_2_0_2_reg_1592 + reg_617);

assign tmp59_fu_1087_p2 = (tmp61_fu_1081_p2 + tmp60_fu_1072_p2);

assign tmp5_fu_729_p2 = (tmp6_fu_724_p2 + reg_641);

assign tmp60_fu_1072_p2 = (tmp_15_2_2_1_1_reg_1602 + tmp_15_2_2_1_2_reg_1617);

assign tmp61_fu_1081_p2 = (tmp62_fu_1076_p2 + reg_641);

assign tmp62_fu_1076_p2 = (tmp_15_2_2_2_1_reg_1632 + reg_665);

assign tmp6_fu_724_p2 = (reg_645 + tmp_15_0_0_2_2_reg_1381);

assign tmp7_fu_800_p2 = (tmp9_reg_1301 + tmp8_reg_1205);

assign tmp9_fu_697_p2 = (tmp_15_0_1_0_2_reg_1200 + reg_617);

assign tmp_15_0_0_2_2_fu_707_p2 = ($signed(reg_494) * $signed(kernel_load_8_reg_1286));

assign tmp_15_0_1_2_2_fu_741_p2 = ($signed(reg_498) * $signed(kernel_load_8_reg_1286));

assign tmp_15_0_2_2_1_fu_746_p2 = ($signed(reg_498) * $signed(kernel_load_7_reg_1267));

assign tmp_15_0_2_2_2_fu_782_p2 = ($signed(input_load_14_reg_1401) * $signed(kernel_load_8_reg_1286));

assign tmp_15_1_0_2_1_fu_845_p2 = ($signed(reg_502) * $signed(kernel_load_7_reg_1267));

assign tmp_15_1_1_2_2_fu_882_p2 = ($signed(input_load_18_reg_1508) * $signed(kernel_load_8_reg_1286));

assign tmp_15_1_2_1_1_fu_791_p2 = ($signed(reg_498) * $signed(kernel_load_4_reg_1191));

assign tmp_15_1_2_1_2_fu_796_p2 = ($signed(input_load_14_reg_1401) * $signed(kernel_load_5_reg_1220));

assign tmp_15_1_2_1_fu_786_p2 = ($signed(reg_494) * $signed(kernel_load_3_reg_1174));

assign tmp_15_1_2_2_1_fu_886_p2 = ($signed(input_load_18_reg_1508) * $signed(kernel_load_7_reg_1267));

assign tmp_15_1_2_2_2_fu_920_p2 = ($signed(input_load_19_reg_1521) * $signed(kernel_load_8_reg_1286));

assign tmp_15_2_0_1_1_fu_850_p2 = ($signed(reg_502) * $signed(kernel_load_4_reg_1191));

assign tmp_15_2_1_1_2_fu_924_p2 = ($signed(input_load_18_reg_1508) * $signed(kernel_load_5_reg_1220));

assign tmp_15_2_2_0_1_fu_969_p2 = ($signed(reg_498) * $signed(kernel_load_1_reg_1139));

assign tmp_15_2_2_0_2_fu_974_p2 = ($signed(input_load_14_reg_1401) * $signed(kernel_load_2_reg_1156));

assign tmp_15_2_2_1_1_fu_988_p2 = ($signed(input_load_18_reg_1508) * $signed(kernel_load_4_reg_1191));

assign tmp_15_2_2_1_2_fu_996_p2 = ($signed(input_load_19_reg_1521) * $signed(kernel_load_5_reg_1220));

assign tmp_15_2_2_fu_964_p2 = ($signed(reg_494) * $signed(kernel_load_reg_1123));

assign tmp_fu_751_p2 = (tmp2_reg_1276 + reg_693);

endmodule //conv2d
